--RF1
select id_habitacion, consumos.costoFinal 
from habis inner join consumos on habis.id_habitacion = consumos.habis_id_habitacion 
where consumos.fecha between '01/01/2023' and '31/12/2023';
--RF2
select servicios.tipo_servicio, count(servicios.tipo_servicio) AS Consumo
from Servicios inner join reservaserv on servicios.idservicio = reservaServ.Servicios_idServicio
    inner join consumos on reservaserv.consumos_idconsumo = consumos.idconsumo
where consumos.fecha between '01/01/2020' and '31/12/2023' AND rownum < 21
group by servicios.tipo_servicio
ORDER BY COUNT(servicios.tipo_servicio) DESC;

--RF3

SELECT RESERVAS.HABIS_ID_HABITACION, COUNT(RESERVAS.HABIS_ID_HABITACION)*100/(SELECT COUNT(*) FROM RESERVAS WHERE FECHA_ENTRADA between '01/01/2023' and '31/12/2023') AS PorcentajeOcupacion
        FROM RESERVAS
        WHERE FECHA_ENTRADA between '01/01/2023' and '31/12/2023'
        GROUP BY HABIS_ID_HABITACION;

--RF4
--RANGO DE FECHAS
SELECT * 
FROM SERVICIOS INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO = RESERVASERV.SERVICIOS_IDSERVICIO
    INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE CONSUMOS.FECHA between '01/01/2020' and '31/12/2023';

-- REGISTRADOS POR UN USUARIO
SELECT * 
FROM SERVICIOS INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO = RESERVASERV.SERVICIOS_IDSERVICIO
    INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE RESERVASERV.USUARIOS_ID = 1878817226;

--POR TIPO
SELECT * 
FROM SERVICIOS INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO = RESERVASERV.SERVICIOS_IDSERVICIO
    INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE SERVICIOS.TIPO_SERVICIO = 'INTERNET';

--TODOS LOS FILTROS JUNTOS
SELECT * 
FROM SERVICIOS INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO = RESERVASERV.SERVICIOS_IDSERVICIO
    INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE RESERVASERV.USUARIOS_ID = 1878817226 AND CONSUMOS.FECHA between '01/01/2020' and '31/12/2023' AND SERVICIOS.TIPO_SERVICIO = 'INTERNET';

--RF5
SELECT USUARIOS.ID, USUARIOS.NOMBRE, RESERVASERV.IDRESERVA, SERVICIOS.SERVICIOS_TYPE, CONSUMOS.COSTOFINAL, CONSUMOS.FECHA 
FROM USUARIOS INNER JOIN RESERVASERV ON reservaserv.usuarios_id = usuarios.id
    INNER JOIN CONSUMOS ON reservaserv.consumos_idconsumo = consumos.idconsumo
    INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
WHERE USUARIOS.ID = 1878817226 AND CONSUMOS.FECHA between '01/01/2020' and '31/12/2023';

--RF6
--fechas de mayor ocupación
WITH fechas_reservas AS (
    SELECT fecha_entrada AS fecha FROM reservas
    UNION ALL
    SELECT fecha_salida FROM reservas),
dias_intermedios AS (
    SELECT
        fecha_entrada + LEVEL - 1 AS fecha
    FROM (SELECT MIN(fecha) AS fecha_entrada, MAX(fecha) AS fecha_salida FROM fechas_reservas)
    CONNECT BY LEVEL <= fecha_salida - fecha_entrada + 1)

SELECT di.fecha, COUNT(idreserva) AS habitaciones_ocupadas
FROM dias_intermedios di LEFT JOIN reservas r ON di.fecha BETWEEN r.fecha_entrada AND r.fecha_salida
GROUP BY di.fecha
ORDER BY COUNT(idreserva) DESC
FETCH FIRST 10 ROWS ONLY;

-- fechas de menor ocupación
WITH fechas_reservas AS (
    SELECT fecha_entrada AS fecha FROM reservas
    UNION ALL
    SELECT fecha_salida FROM reservas),
dias_intermedios AS (
    SELECT
        fecha_entrada + LEVEL - 1 AS fecha
    FROM (SELECT MIN(fecha) AS fecha_entrada, MAX(fecha) AS fecha_salida FROM fechas_reservas)
    CONNECT BY LEVEL <= fecha_salida - fecha_entrada + 1)
    
SELECT di.fecha, COUNT(idreserva) AS habitaciones_ocupadas
FROM dias_intermedios di LEFT JOIN reservas r ON di.fecha BETWEEN r.fecha_entrada AND r.fecha_salida
--WHERE r.fecha_entrada BETWEEN '01/01/2020' AND '31/12/2024' AND r.fecha_salida BETWEEN '01/01/2020' AND '31/12/2024'
GROUP BY di.fecha
ORDER BY COUNT(idreserva) ASC
FETCH FIRST 10 ROWS ONLY;

--mayores ingresos
SELECT FECHA, SUM(consumos.costofinal) 
FROM CONSUMOS
GROUP BY FECHA
ORDER BY  SUM(consumos.costofinal) DESC
FETCH FIRST 10 ROWS ONLY;

--RF7
SELECT usuarios.id, SUM(consumos.costofinal) as consumos
FROM reservas 
INNER JOIN usureservas ON reservas.idreserva = usureservas.reservas_idreserva 
INNER JOIN usuarios ON usureservas.usuarios_id = usuarios.id 
FULL JOIN reservaserv ON usuarios.id = reservaserv.usuarios_id 
FULL JOIN consumos ON reservaserv.consumos_idconsumo = consumos.idconsumo
WHERE (TO_CHAR(reservas.fecha_salida, 'IW') - TO_CHAR(reservas.fecha_entrada, 'IW') > 2)
GROUP BY usuarios.id
HAVING SUM(consumos.costofinal) > 15000000;

--RF8
SELECT SERVICIOS.TIPO_SERVICIO, COUNT(SERVICIOS.TIPO_SERVICIO)/52 AS SERVICIO_POR_SEMANA
FROM RESERVASERV 
    INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
GROUP BY SERVICIOS.TIPO_SERVICIO
HAVING COUNT(SERVICIOS.TIPO_SERVICIO)/52 < 3;

--RF9
SELECT USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, CONSUMOS.FECHA, Servicios.SERVICIOS_TYPE
FROM USUARIOS INNER JOIN RESERVASERV ON RESERVASERV.USUARIOS_ID = USUARIOS.ID
        INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE CONSUMOS.FECHA BETWEEN '01/01/2020' AND '31/12/2024' AND servicios.tipo_servicio = 'INTERNET'
ORDER BY USUARIOS.ID;

SELECT USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, Servicios.SERVICIOS_TYPE, COUNT(Servicios.SERVICIOS_TYPE)
FROM USUARIOS INNER JOIN RESERVASERV ON RESERVASERV.USUARIOS_ID = USUARIOS.ID
        INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE CONSUMOS.FECHA BETWEEN '01/01/2020' AND '31/12/2024' AND servicios.tipo_servicio = 'INTERNET'
GROUP BY USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, Servicios.SERVICIOS_TYPE;

--RF10
SELECT USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, CONSUMOS.FECHA, Servicios.SERVICIOS_TYPE
FROM USUARIOS INNER JOIN RESERVASERV ON RESERVASERV.USUARIOS_ID = USUARIOS.ID
        INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE CONSUMOS.FECHA BETWEEN '01/01/2020' AND '31/12/2024' AND servicios.tipo_servicio != 'PISCINA'
ORDER BY USUARIOS.ID;

SELECT USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, Servicios.SERVICIOS_TYPE, COUNT(Servicios.SERVICIOS_TYPE)
FROM USUARIOS INNER JOIN RESERVASERV ON RESERVASERV.USUARIOS_ID = USUARIOS.ID
        INNER JOIN SERVICIOS ON RESERVASERV.SERVICIOS_IDSERVICIO = SERVICIOS.IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
WHERE CONSUMOS.FECHA BETWEEN '01/01/2020' AND '31/12/2024' AND servicios.tipo_servicio != 'PISCINA'
GROUP BY USUARIOS.ID, USUARIOS.TIPOID, USUARIOS.NOMBRE, USUARIOS.EMAIL, USUARIOS.LOGIN, Servicios.SERVICIOS_TYPE;

--RF11
--Mejor servicio por semana
SELECT numero_semana, cantidad_consumos, TIPO_SERVICIO, GASTO
FROM (SELECT 
        TO_CHAR(CONSUMOS.FECHA, 'IW') AS numero_semana,
        COUNT(CONSUMOS.IDCONSUMO) AS cantidad_consumos, 
        SERVICIOS.TIPO_SERVICIO,
        SUM(CONSUMOS.COSTOFINAL) AS GASTO,
        ROW_NUMBER() OVER (PARTITION BY TO_CHAR(CONSUMOS.FECHA, 'IW') ORDER BY COUNT(CONSUMOS.IDCONSUMO) DESC) AS ranking
    FROM SERVICIOS 
        INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO =  RESERVASERV.SERVICIOS_IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
    WHERE CONSUMOS.FECHA BETWEEN TO_DATE('01/01/2020', 'DD/MM/YYYY') AND TO_DATE('31/12/2024', 'DD/MM/YYYY')
    GROUP BY TO_CHAR(CONSUMOS.FECHA, 'IW'), SERVICIOS.TIPO_SERVICIO)
WHERE ranking = 1;

--Peor servicio por semana
SELECT numero_semana, cantidad_consumos, TIPO_SERVICIO, GASTO
FROM (SELECT 
        TO_CHAR(CONSUMOS.FECHA, 'IW') AS numero_semana,
        COUNT(CONSUMOS.IDCONSUMO) AS cantidad_consumos, 
        SERVICIOS.TIPO_SERVICIO,
        SUM(CONSUMOS.COSTOFINAL) AS GASTO,
        ROW_NUMBER() OVER (PARTITION BY TO_CHAR(CONSUMOS.FECHA, 'IW') ORDER BY COUNT(CONSUMOS.IDCONSUMO) ASC) AS ranking
    FROM SERVICIOS 
        INNER JOIN RESERVASERV ON SERVICIOS.IDSERVICIO =  RESERVASERV.SERVICIOS_IDSERVICIO
        INNER JOIN CONSUMOS ON RESERVASERV.CONSUMOS_IDCONSUMO = CONSUMOS.IDCONSUMO
    WHERE CONSUMOS.FECHA BETWEEN TO_DATE('01/01/2020', 'DD/MM/YYYY') AND TO_DATE('31/12/2024', 'DD/MM/YYYY')
    GROUP BY TO_CHAR(CONSUMOS.FECHA, 'IW'), SERVICIOS.TIPO_SERVICIO)
WHERE ranking = 1;

--habitacion menos solicitada
select * from reservas;

SELECT numero_semana, cantidad_reservas, Habis_id_habitacion
FROM (SELECT 
        TO_CHAR(reservas.fecha_entrada, 'IW') AS numero_semana,
        COUNT(reservas.idreserva) AS cantidad_reservas, 
        Habis_id_habitacion,
        ROW_NUMBER() OVER (PARTITION BY TO_CHAR(reservas.fecha_entrada, 'IW') ORDER BY COUNT(reservas.idreserva) ASC) AS ranking
    FROM reservas 
    WHERE reservas.fecha_entrada BETWEEN TO_DATE('01/01/2020', 'DD/MM/YYYY') AND TO_DATE('31/12/2024', 'DD/MM/YYYY')
    GROUP BY TO_CHAR(reservas.fecha_entrada, 'IW'), Habis_id_habitacion)
WHERE ranking = 1;

--habitacion mas solicitada
SELECT numero_semana, cantidad_reservas, Habis_id_habitacion
FROM (SELECT 
        TO_CHAR(reservas.fecha_entrada, 'IW') AS numero_semana,
        COUNT(reservas.idreserva) AS cantidad_reservas, 
        Habis_id_habitacion,
        ROW_NUMBER() OVER (PARTITION BY TO_CHAR(reservas.fecha_entrada, 'IW') ORDER BY COUNT(reservas.idreserva) DESC) AS ranking
    FROM reservas 
    WHERE reservas.fecha_entrada BETWEEN TO_DATE('01/01/2020', 'DD/MM/YYYY') AND TO_DATE('31/12/2024', 'DD/MM/YYYY')
    GROUP BY TO_CHAR(reservas.fecha_entrada, 'IW'), Habis_id_habitacion)
WHERE ranking = 1;


--RF12
--visita por trimestr

SELECT * FROM TIPOSUSU;
SELECT DISTINCT usuario, nombre 
FROM (
    SELECT usuario, NOMBRE
    FROM (
            SELECT UNIQUE USURESERVAS.USUARIOS_ID AS usuario, U.NOMBRE AS NOMBRE,
            TO_CHAR(RESERVAS.FECHA_ENTRADA, 'Q') AS trimestre
            FROM USURESERVAS 
                INNER JOIN RESERVAS ON reservas.idreserva = usureservas.reservas_idreserva
                INNER JOIN USUARIOS U ON U.ID = USURESERVAS.USUARIOS_ID
            WHERE U.TIPOSUSU_IDTIPO = 2
    ) 
    GROUP BY usuario, NOMBRE
    HAVING SUM(trimestre) = 10
    
    UNION ALL


    SELECT u.id AS usuario, u.nombre
    FROM  USUARIOS U INNER JOIN USURESERVAS US ON U.ID = US.USUARIOS_ID
        INNER JOIN RESERVASERV  RE ON RE.USUARIOS_ID = U.ID
        INNER JOIN CONSUMOS C ON RE.CONSUMOS_IDCONSUMO = C.IDCONSUMO
        INNER JOIN SERVICIOS S ON RE.SERVICIOS_IDSERVICIO = S.IDSERVICIO
    WHERE C.COSTOFINAL > 300000 AND U.TIPOSUSU_IDTIPO = 2

    UNION ALL
    
    SELECT U.ID AS usuario, u.nombre
    FROM  USUARIOS U INNER JOIN RESERVASERV  RE ON RE.USUARIOS_ID = U.ID
        INNER JOIN SERVICIOS S ON RE.SERVICIOS_IDSERVICIO = S.IDSERVICIO
        FULL JOIN SPA ON S.IDSERVICIO = SPA.IDSERVICIO
        FULL JOIN SALONES ON S.IDSERVICIO = SALONES.IDSERVICIO
    WHERE SPA.DURACION > 4 OR SALONES.HORAS > 4 AND U.TIPOSUSU_IDTIPO = 2
) req12;


commit;


